# This workflows will upload a test Python Package using Twine when a tag matching v* is created

name: Upload Test Python Package

on:
  push:
    branches-ignore:
      - 'main'
      - 'releases/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux-gnu:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          default: true
          override: true

      - name: Install cargo-quickinstall and cargo-download
        run: |
          cargo install cargo-quickinstall
          cargo quickinstall cargo-download

      - name: Download rust library version 0.1.0
        run: |
          cargo download ontodev_valve=0.1.0 -x -o valve.rs

      - name: Create a soft-link to the rust library
        working-directory: ./valve.rs
        run: |
          ln -s ../../valve_py.rs src/

      - name: Edit lib.rs
        working-directory: ./valve.rs
        run: |
          echo -e "\nmod valve_py;" >> src/lib.rs

      - name: Add dependencies to Cargo.toml
        working-directory: ./valve.rs
        run: |
          echo -e "\n\
          # [lib] and [dependencies.pyo3] are needed for valve.py bindings:\n\
          [lib]\n\
          name = \"ontodev_valve\"\n\
          crate-type = [\"cdylib\", \"lib\"]\n\
          \n\
          [dependencies.pyo3]\n\
          version = \"0.16.5\"\n\
          # \"extension-module\" tells pyo3 we want to build an extension module (skips linking against ibpython.so)\n\
          features = [\"extension-module\"]" >> Cargo.toml

      - name: Change project name in Cargo.toml
        working-directory: ./valve.rs
        run: |
          sed 's/ontodev_valve/m_cuffa_ontodev_valve/g' Cargo.toml > Cargo.toml.tmp
          sed 's/0.1.0/0.1.2/g' Cargo.toml.tmp > Cargo.toml.tmp.2
          mv -f Cargo.toml.tmp.2 Cargo.toml
          rm -f Cargo.toml.tmp

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist -m valve.rs/Cargo.toml

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

      # Publishing method #1:
      # ---------------------
      - name: Publish distribution package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      # Publishing method #2:
      # ---------------------
      #- name: Install dependencies
      #  run: |
      #    python -m pip install --upgrade pip
      #    pip install setuptools wheel twine

      #- name: Build and publish
      #  env:
      #    TWINE_USERNAME: __token__
      #    TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #  run: |
      #    python setup.py sdist bdist_wheel
      #    twine upload --repository testpypi dist/*
